@using MFW.ProgressTracker.Enumerations

<i class="@InitializeCssClasses()"></i>

@code {
    [Parameter, EditorRequired]
    public required IconName Name { get; init; }

    [Parameter]
    public string? CssClass { get; init; }

    /// <summary>
    /// Initialize the required CSS classes for the icon component based on the given parameters.
    /// </summary>
    /// <returns>The CSS classes.</returns>
    private string InitializeCssClasses()
    {
        var cssClasses = string.Empty;

        var iconClass = ResolveCssIconClass();

        if (string.IsNullOrEmpty(iconClass))
        {
            return cssClasses;
        }

        cssClasses = $"bi {iconClass}";

        if (string.IsNullOrWhiteSpace(CssClass))
        {
            return cssClasses;
        }

        return cssClasses + $" {CssClass.Trim()}";
    }

    /// <summary>
    /// Resolve the CSS icon class from the given icon name enum.
    /// </summary>
    /// <returns>The CSS icon class.</returns>
    private string ResolveCssIconClass()
    {
        return Name switch
        {
            IconName.InfoCircleFill => "bi-info-circle-fill",
            IconName.CheckCircleFill => "bi-check-circle-fill",
            IconName.ExclamationTriangleFill => "bi-exclamation-triangle-fill",
            IconName.Trash => "bi-trash",
            IconName.BoxArrowDown => "bi-box-arrow-down",
            IconName.BoxArrowInDown => "bi-box-arrow-in-down",
            IconName.PlusLg => "bi-plus-lg",
            _ => string.Empty
        };
    }
}
